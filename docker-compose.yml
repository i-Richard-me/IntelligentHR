services:
  intelligenthr-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8510:8510"
    environment:
      - STREAMLIT_SERVER_PORT=8510
      - TZ=Asia/Shanghai
    env_file:
      - .env
    volumes:
      - .:/app
    command: streamlit run frontend/app.py --server.port=8510 --server.address=0.0.0.0
    restart: always

  langfuse-server:
    image: langfuse/langfuse:2
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - ENCRYPTION_KEY=df04986017e5097f9ca46e46e8614d07c6cd275c2ba0324adc253bbc35771f08
      - NEXTAUTH_URL=http://localhost:3000
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      - TZ=Asia/Shanghai
    profiles:
      - langfuse
    restart: always

  db:
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - TZ=Asia/Shanghai
    ports:
      - 5432:5432
    volumes:
      - ../data/postgres:/var/lib/postgresql/data
    profiles:
      - langfuse

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
      - TZ=Asia/Shanghai
    volumes:
      - ../data/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    profiles:
      - milvus
    restart: always

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      TZ: Asia/Shanghai
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ../data/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    profiles:
      - milvus
    restart: always

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.10
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      TZ: Asia/Shanghai
    volumes:
      - ../data/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    profiles:
      - milvus
    restart: always

  attu:
    container_name: milvus-attu
    image: zilliz/attu:v2.4
    environment:
      MILVUS_URL: milvus-standalone:19530
      TZ: Asia/Shanghai
    ports:
      - "3010:3000"
    depends_on:
      - standalone
    profiles:
      - milvus
    restart: always

networks:
  default:
    name: intelligenthr